{
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Summarize Results",
            "type": "python",
            "request": "launch",
            "module": "src.drivers.collect_results",
            "justMyCode": true,
            "args": [
                // "--barplot",

                "--dset",
                    // "val",
                    "test",
                    "stanford",
                    "sickkids_silent_trial",
                    "stanford_non_seq",
                    "uiowa",
                    "chop",
                "--exp_name",
                // // EXPERIMENT: Effect of augmentation
                    // "supervised__linear_lstm_(TASK)",
                    // "|",
                    // "supervised__linear_lstm_(TASK)__from_imagenet",
                    // "|",
                    // "moco_sk__same_label_side__linear_lstm__(TASK)__finetuned",
                    // "|",
                    // // "moco_sk__same_label_side__no_aug__linear_lstm__(TASK)__finetuned",      // skipped because its random seed was set
                    // "moco_sk__same_label_side__no_aug__redo_1__linear_lstm__(TASK)__finetuned",
                    // "moco_sk__same_label_side__no_aug__redo_1__linear_lstm__(TASK)__finetuned__aug",
                // EXPERIMENT: Effect of augmentation (REDO)
                    // "supervised__linear_lstm_(TASK)__redo_1",
                    // "supervised__linear_lstm_(TASK)__with_aug__redo_1",
                    // "|",
                    // "supervised__linear_lstm_(TASK)__from_imagenet__redo_3",                    // 3rd because 1st and 2nd redo have Batch Size = 1
                    // "supervised__linear_lstm_(TASK)__from_imagenet__with_aug__redo_1",
                    // "|",
                    // "moco_sk__same_label_side__redo_1__linear_lstm__(TASK)__finetuned",
                    // "moco_sk__same_label_side__redo_1__linear_lstm__(TASK)__finetuned__aug",
                    // "|",
                    // "moco_sk__same_label_side__no_aug__redo_2__linear_lstm__(TASK)__finetuned",
                    // "moco_sk__same_label_side__no_aug__redo_2__linear_lstm__(TASK)__finetuned__aug",

                // // EXPERIMENT: Effect of augmentation (all)
                    // "supervised__linear_lstm_(TASK)__redo_1",
                    // "supervised__linear_lstm_(TASK)__with_aug__redo_1",
                    // "|",
                    // // NOTE: ImageNet Model w/ Aug.
                    // "supervised__linear_lstm_(TASK)__from_imagenet__redo_3",
                    // "supervised__linear_lstm_(TASK)__from_imagenet__with_aug",
                    // "|",
                    // // NOTE: SSL Models w/o Aug. in Pretraining
                    // "moco_sk_vanilla__no_aug__linear_lstm__(TASK)__finetuned",
                    // "moco_sk_vanilla__no_aug__linear_lstm__(TASK)__finetuned__aug",
                    // "|",
                    // "moco_sk_by_seq__no_aug__linear_lstm__(TASK)__finetuned",
                    // "moco_sk_by_seq__no_aug__linear_lstm__(TASK)__finetuned__aug",
                    // "|",
                    // "moco_sk__same_label_side__no_aug__redo_2__linear_lstm__(TASK)__finetuned",
                    // "moco_sk__same_label_side__no_aug__redo_2__linear_lstm__(TASK)__finetuned__aug",
                    // "|",
                    // "moco_sk__same_label_plane__no_aug__linear_lstm__(TASK)__finetuned",
                    // "moco_sk__same_label_plane__no_aug__linear_lstm__(TASK)__finetuned__aug",
                    // "|",
                    // // NOTE: SSL Models with Aug. in Pretraining
                    // "moco_sk_vanilla__redo_2__linear_lstm__(TASK)__finetuned",
                    // "moco_sk_vanilla__redo_2__linear_lstm__(TASK)__finetuned__aug",
                    // "|",
                    // "moco_sk_by_seq__redo_2__linear_lstm__(TASK)__finetuned",
                    // "moco_sk_by_seq__redo_2__linear_lstm__(TASK)__finetuned__aug",
                    // "|",
                    // "moco_sk__same_label_side__redo_1__linear_lstm__(TASK)__finetuned",
                    // "moco_sk__same_label_side__redo_1__linear_lstm__(TASK)__finetuned__aug",
                    // "|",
                    // "moco_sk__same_label_plane__redo_3__linear_lstm__(TASK)__finetuned",
                    // "moco_sk__same_label_plane__redo_3__linear_lstm__(TASK)__finetuned__aug",

                    // "--ignore_bladder",
                    // "--fname", "aug_ablation (all, lstm_linear, all dsets, ungrouped, ignore_bladder).csv",
                    // "--plotname", "aug_ablation (all, lstm_linear, all dsets, ungrouped, ignore_bladder).png",

                // // EXPERIMENT: Effect of augmentation (all, linear model)
                    // "supervised__linear_(TASK)",
                    // "supervised__linear_(TASK)__with_aug",
                    // "|",
                    // // NOTE: ImageNet Model w/ Aug.
                    // "supervised__linear_(TASK)__from_imagenet",
                    // "supervised__linear_(TASK)__from_imagenet__with_aug",
                    // "|",
                    // // NOTE: SSL Models w/o Aug. in Pretraining
                    // "moco_sk_vanilla__no_aug__linear__(TASK)__finetuned",
                    // "moco_sk_vanilla__no_aug__linear__(TASK)__finetuned__aug",
                    // "|",
                    // "moco_sk_by_seq__no_aug__linear__(TASK)__finetuned",
                    // "moco_sk_by_seq__no_aug__linear__(TASK)__finetuned__aug",
                    // "|",
                    // "moco_sk__same_label_side__no_aug__redo_2__linear__(TASK)__finetuned",
                    // "moco_sk__same_label_side__no_aug__redo_2__linear__(TASK)__finetuned__aug",
                    // "|",
                    // "moco_sk__same_label_plane__no_aug__linear__(TASK)__finetuned",
                    // "moco_sk__same_label_plane__no_aug__linear__(TASK)__finetuned__aug",
                    // "|",
                    // // NOTE: SSL Models with Aug. in Pretraining
                    // "moco_sk_vanilla__redo_2__linear__(TASK)__finetuned",
                    // "moco_sk_vanilla__redo_2__linear__(TASK)__finetuned__aug",
                    // "|",
                    // "moco_sk_by_seq__redo_2__linear__(TASK)__finetuned",
                    // "moco_sk_by_seq__redo_2__linear__(TASK)__finetuned__aug",
                    // "|",
                    // "moco_sk__same_label_side__redo_1__linear__(TASK)__finetuned",
                    // "moco_sk__same_label_side__redo_1__linear__(TASK)__finetuned__aug",
                    // "|",
                    // "moco_sk__same_label_plane__redo_3__linear__(TASK)__finetuned",
                    // "moco_sk__same_label_plane__redo_3__linear__(TASK)__finetuned__aug",

                    // "--ignore_bladder",
                    // "--fname", "aug_ablation (all, only linear, all dsets, ungrouped, ignore_bladder).csv",
                    // "--plotname", "aug_ablation (all, only linear, all dsets, ungrouped, ignore_bladder).png",

                // // EXPERIMENT: Same-Video Ablation
                    // "moco_sk__same_label_side__linear_lstm__(TASK)__finetuned",
                    // "moco_sk__same_label_side__any_video__linear_lstm__(TASK)__finetuned",
                    // "|",
                    // "moco_sk__same_label_plane__linear_lstm__(TASK)__finetuned",
                    // "moco_sk__same_label_plane__any_video__linear_lstm__(TASK)__finetuned"

                // EXPERIMENT: ImageNet Redos
                    // "supervised__linear_lstm_(TASK)__from_imagenet",
                    // "supervised__linear_lstm_(TASK)__from_imagenet__redo_1",
                    // "supervised__linear_lstm_(TASK)__from_imagenet__redo_2",
                    // "supervised__linear_lstm_(TASK)__from_imagenet__redo_3",

                // EXPERIMENT: ImageNet and MoCo  FT vs. LP vs. LP-FT
                    // "supervised__linear_lstm_(TASK)__from_imagenet__redo_3",
                    // "supervised__linear_lstm_(TASK)__from_imagenet__lp",
                    // "supervised__linear_lstm_(TASK)__from_imagenet__lp__ft",
                    // "|",
                    // "moco_sk_vanilla__no_aug__linear_lstm__(TASK)__lp",
                    // "moco_sk_vanilla__no_aug__linear_lstm__(TASK)__finetuned",
                    // "moco_sk_vanilla__no_aug__linear_lstm__(TASK)__lp__ft",

                // // EXPERIMENT: Is SSL-pretraining effective at learning view features (with aug. in fine-tuning)?
                // // NOTE: Augmentations are all added for ablating effect of augmentation
                    // "supervised__linear_lstm_(TASK)__with_aug__redo_1",
                    // "|",
                    // "supervised__linear_lstm_(TASK)__from_imagenet__with_aug",
                    // "|",
                    // "moco_sk__same_label_side__redo_1__linear_lstm__(TASK)__finetuned__aug",
                    // "moco_sk__same_label_plane__redo_3__linear_lstm__(TASK)__finetuned__aug",
                    // "moco_sk_vanilla__redo_2__linear_lstm__(TASK)__finetuned__aug",
                    // "moco_sk_by_seq__redo_2__linear_lstm__(TASK)__finetuned__aug",

                // // MAIN EXPERIMENT: Is SSL-pretraining effective at learning view features (without aug. in fine-tuning)?
                // // NOTE: Augmentations are all added for ablating effect of augmentation
                //     "supervised__linear_lstm_(TASK)__redo_1",
                //     "|",
                //     "supervised__linear_lstm_(TASK)__from_imagenet__redo_3",
                //     "|",
                //     "moco_sk__same_label_side__redo_1__linear_lstm__(TASK)__finetuned",
                //     "moco_sk__same_label_plane__redo_3__linear_lstm__(TASK)__finetuned",
                //     "moco_sk_vanilla__redo_2__linear_lstm__(TASK)__finetuned",
                //     "moco_sk_by_seq__redo_2__linear_lstm__(TASK)__finetuned",

                // EXPERIMENT: MoCo pretraining from ImageNet
                    // "supervised__linear_(TASK)",
                    // "supervised__linear_(TASK)__with_aug",
                    // "|",
                    // "supervised__linear_(TASK)__from_imagenet",
                    // "supervised__linear_(TASK)__from_imagenet__with_aug",
                    // "|",
                    // "supervised__linear_lstm_(TASK)__from_imagenet__redo_3",
                    // "supervised__linear_lstm_(TASK)__from_imagenet__with_aug",
                    // "|",
                    // "moco_sk_vanilla__from_imgnet__linear__(TASK)__finetuned",
                    // "moco_sk_vanilla__from_imgnet__linear__(TASK)__finetuned__aug",
                    // "|",
                    // "moco_sk_vanilla__from_imgnet__linear_lstm__(TASK)__finetuned",
                    // "moco_sk_vanilla__from_imgnet__linear_lstm__(TASK)__finetuned__aug",
                    // "|",
                    // "moco_sk__same_label_plane__no_aug__from_imgnet__linear__(TASK)__finetuned",
                    // "moco_sk__same_label_plane__no_aug__from_imgnet__linear__(TASK)__finetuned__aug",
                    // "|",
                    // "moco_sk__same_label_plane__no_aug__from_imgnet__linear_lstm__(TASK)__finetuned",
                    // "moco_sk__same_label_plane__no_aug__from_imgnet__linear_lstm__(TASK)__finetuned__aug",

                    // "--ignore_bladder",
                    // "--fname", "imagenet_ssl_tuning (ignore_bladder).csv",
                    // "--plotname", "imagenet_ssl_tuning (ignore_bladder).png",

                // EXPERIMENT: Does ensembling ImageNet + SSL improve generalization?
                    "ensemble_imagenet__moco_same_side_no_aug__linear__(TASK)",
                    "ensemble_imagenet__moco_same_side_no_aug__linear__(TASK)__aug",
                    "|",
                    "ensemble_imagenet__moco_same_side_no_aug__linear__(TASK)__finetuned",
                    "ensemble_imagenet__moco_same_side_no_aug__linear__(TASK)__finetuned__aug" ,
                    "|",
                    "ensemble_imagenet__moco_same_side_no_aug__linear_lstm__(TASK)",
                    "ensemble_imagenet__moco_same_side_no_aug__linear_lstm__(TASK)__aug",
                    "|",
                    "ensemble_imagenet__moco_same_side_no_aug__linear_lstm__(TASK)__finetuned__aug",
                    "ensemble_imagenet__moco_same_side_no_aug__linear_lstm__(TASK)__finetuned__aug__redo_1",
                    "|",
                    "ensemble_imagenet__moco_same_side_no_aug__linear__(TASK)__two_fc",
                    "ensemble_imagenet__moco_same_side_no_aug__linear__(TASK)__exp_lr_sched",
                    "ensemble_imagenet__moco_sk__same_label_side__no_aug__redo_2__finetuned__linear__(TASK)__aug",
                    "|",
                    "ensemble_imagenet__moco_sk_vanilla__no_aug__linear__(TASK)__aug",
                    "|",
                    "ensemble_imagenet__moco_sk__vanilla__no_aug__linear__(TASK)__higher_bs",
                    "ensemble_imagenet__moco_sk__vanilla__no_aug__linear__(TASK)__longer_train",
                    "ensemble_imagenet__moco_sk__vanilla__no_aug__linear__(TASK)__dropout",

                    "--ignore_bladder",
                    "--fname", "imagenet_ssl_ensembling (ignore_bladder).csv",

                // EXPERIMENT: Are side features useful for plane classification?
                    // "supervised__linear_lstm_(TASK)__redo_1",
                    // "supervised__linear_lstm_side__redo_1__linear_lstm__(TASK)_finetuned",
                    "--task", "plane",
                    // "--fname", "side_features_for_plane_classification.csv",
            ]
        },
        {
            "name": "Evaluate View Preds on HN Model",
            "type": "python",
            "request": "launch",
            "module": "src.drivers.model_applied_eval",
            "justMyCode": true,
            "args": [
                "--pairing_method",
                    "random",
                    // "most_confident_pred",
                "--exp_name",
                // Only Supervised
                    // "supervised__linear_lstm_side__redo_1",
                    "supervised__linear_lstm_plane__redo_1",

                    // "supervised__linear_lstm_side__with_aug__redo_1",
                    // "supervised__linear_lstm_plane__with_aug__redo_1",

                "--dset",
                    "test",
                    "stanford",
            ]
        },
        {
            "name": "SSL Evaluation Pipeline",
            "type": "python",
            "request": "launch",
            "module": "src.drivers.ssl_model_eval",
            "justMyCode": true,
            "args": [
                "--augment_training",
                "--exp_name",
                    // "moco_sk__same_label_side__slcon_loss",
                    // "moco_sk__same_label_plane",
                    // "moco_sk__same_label_plane__any_video",
                    // "moco_sk__same_label_side__any_video",
                    // "moco_sk_all",
                    // "moco_sk_all__redo_1",
                    // "moco_sk_redo_1",
                    // "moco_sk_vanilla__redo_2",
                    // "moco_sk_by_seq",
                    // "moco_sk_by_seq__redo_2",
                    // "moco_sk_by_seq__redo_3",
                    // "tclr__no_instance",
                    // "tclr__no_instance__redo_1",

                // Experiment: SSL w/ no augmentations
                    // "moco_sk_vanilla__no_aug",
                    // "moco_sk_by_seq__no_aug",

                    // "moco_sk__same_label_side__no_aug__redo_2",
                    // "moco_sk__same_label_side__redo_1",

                    // "moco_sk__same_label_plane__no_aug",
                    // "moco_sk__same_label_plane__redo_3",

                // Experiment: SSL w/ augmentation in pretraining + finetuning
                    // "moco_sk_vanilla__redo_2",
                    // "moco_sk_by_seq__redo_2",
                    // "moco_sk__same_label_side__redo_1",

                    // "moco_sk__same_label_plane__no_aug__from_imgnet",

                    "moco_sk_vanilla__from_imgnet",
                "--dset",
                    // "train",
                    // "val",
                    "test",
                    "stanford",
                    "uiowa",
                    "chop",
                    "stanford_non_seq",
                    "sickkids_silent_trial",
                // "--from_ssl_eval",
            ]
        },
        {
            "name": "Evaluate Supervised Models",
            "type": "python",
            "request": "launch",
            "module": "src.drivers.model_eval",
            "justMyCode": true,
            "args": [
                "--exp_name",
                // Only Supervised
                    // "supervised__linear_lstm_side__redo_1",
                    // "supervised__linear_lstm_plane__redo_1",

                    // "supervised__linear_lstm_side__with_aug__redo_1",
                    // "supervised__linear_lstm_plane__with_aug__redo_1",

                // // ImageNet - finetuned
                    // "supervised__linear_lstm_side__from_imagenet__redo_3",
                    // "supervised__linear_lstm_plane__from_imagenet__redo_3",

                    // "supervised__linear_lstm_side__from_imagenet__with_aug",
                    // "supervised__linear_lstm_plane__from_imagenet__with_aug",

                    // LSTM-Linear probing
                    // "supervised__linear_lstm_side__from_imagenet__lp",
                    // LSTM-linear probing + Fine-tuning 
                    // "supervised__linear_lstm_side__from_imagenet__lp__ft",

                    // With Ensembling
                    // "ensemble_imagenet__moco_sk_vanilla__no_aug__linear__plane__aug",
                    // "ensemble_imagenet__moco_sk__same_label_side__no_aug__redo_2__finetuned__linear__plane__aug",
                    // "ensemble_imagenet__moco_sk__vanilla__no_aug__linear__plane__higher_bs",
                    "ensemble_imagenet__moco_sk__vanilla__no_aug__linear__plane__dropout",

                // From Supervised Side
                    // "supervised__linear_lstm_side__redo_1__linear_lstm__plane_finetuned",
                    // "supervised__linear_lstm_plane__redo_1__linear_lstm__side__finetuned",

                // Linear Models
                    // "supervised__linear_side",
                    // "supervised__linear_side__with_aug",
                    // "supervised__linear_plane",
                    // "supervised__linear_plane__with_aug",

                    // "supervised__linear_side__from_imagenet",
                    // "supervised__linear_plane__from_imagenet",
                    // "supervised__linear_side__from_imagenet__with_aug",
                    // "supervised__linear_plane__from_imagenet__with_aug",

                "--dset",
                    // "train",
                    // "val",
                    "test",
                    "stanford",
                    "uiowa",
                    "chop",
                    "stanford_non_seq",
                    "sickkids_silent_trial",
            ]
        },
        {
            "name": "Train TCLR (SickKids)",
            "type": "python",
            "request": "launch",
            "module": "src.drivers.model_training",
            "justMyCode": true,
            "args": [
                "--exp_name",
                "tclr__no_instance__redo_1",
                "--hospital",
                "sickkids",
                // "--label_part", "side",
                // "--include_unlabeled",
                "--train",
                "--test",
                "--train_test_split",
                "0.75",
                "--train_val_split",
                "0.75",
                "--same_label",
                "--self_supervised",
                "--ssl_model",
                "tclr",
                "--temperature",
                "0.1",
                "--adam",
                "--lr",
                "0.0005",
                "--batch_size",
                "6",
                "--num_workers",
                "6",
                // "--batch_size", "128",
                "--shuffle",
                // "--pin_memory",
                "--precision",
                "16",
                "--stop_epoch",
                "300",
                // "--debug",
            ]
        },
        {
            "name": "Train MoCo (Per Patient) No Aug",
            "type": "python",
            "request": "launch",
            "module": "src.drivers.model_training",
            "justMyCode": true,
            "args": [
                "--exp_name",
                "moco_sk_by_seq__no_aug",
                "--hospital",
                "sickkids",
                // "--augment_training",
                // "--seed", "20230201",
                // "--include_unlabeled",
                "--train",
                "--test",
                "--train_test_split",
                "0.75",
                "--train_val_split",
                "0.75",
                "--full_seq",
                "--self_supervised",
                "--ssl_model",
                "moco",
                "--memory_bank_size",
                "0",
                "--temperature",
                "0.1",
                "--adam",
                "--precision",
                "16",
                "--num_workers",
                "6",
                "--batch_size",
                "1",
                // "--shuffle",
                "--pin_memory",
                "--stop_epoch",
                "150",
                // "--debug",
            ]
        },
        {
            "name": "Train MoCo (Same-Image, Any-Video)",
            "type": "python",
            "request": "launch",
            "module": "src.drivers.model_training",
            "justMyCode": true,
            "args": [
                "--from_imagenet",
                "--augment_training",
                "--exp_name",
                    "moco_sk_vanilla__from_imgnet",
                "--hospital", "sickkids",
                // "--from_exp_name", "supervised__linear_lstm_side",
                // "--include_unlabeled",
                // "--seed", "20230201",
                "--train",
                "--test",
                "--train_test_split",
                "0.75",
                "--train_val_split",
                "0.75",
                "--self_supervised",
                "--ssl_model",
                "moco",
                "--memory_bank_size",
                "2048",
                "--temperature",
                "0.1",
                "--adam",
                "--batch_size",
                "128",
                "--precision", "16",
                "--shuffle",
                "--num_workers", "6",
                "--pin_memory",
                "--stop_epoch", "150",
                // "--debug",
            ]
        },
        {
            "name": "Train MoCo (Same-Label) No Aug",
            "type": "python",
            "request": "launch",
            "module": "src.drivers.model_training",
            "justMyCode": true,
            "args": [
                // "--from_imagenet",
                "--exp_name",
                    "moco_sk__same_label_plane__no_aug",
                // "moco_sk__same_label_side__slcon_loss",
                "--hospital", "sickkids",
                "--label_part", "plane",
                // "--augment_training",
                // "--debug",
                // "--seed", "20230201",
                "--batch_size", "1", // 1, 64
                "--same_label",
                "--full_seq", // Same-video sampling
                "--custom_collate", "same_label", // Same-label Pairing
                // "--custom_ssl_loss", "same_label",          // Same-label Contrastive Loss
                "--train",
                "--test",
                "--train_val_split", "0.75",
                "--train_test_split", "0.75",
                "--shuffle",

                "--self_supervised",
                "--ssl_model", "moco",
                "--temperature", "0.1",
                // "--memory_bank_size", "2048",
                "--memory_bank_size", "0",
                // "--exclude_momentum_encoder",

                "--adam",
                "--num_workers", "6",
                "--pin_memory",
                "--precision", "16",
                "--stop_epoch", "100",
            ]
        },
        {
            "name": "Train Supervised Multi-output EfficientNet-LSTM",
            "type": "python",
            "request": "launch",
            "module": "src.drivers.model_training",
            "justMyCode": true,
            "args": [
                "--exp_name",
                "supervised__multi_output__linear_lstm",
                "--multi_output",
                "--train",
                "--test",
                "--train_test_split",
                "0.75",
                "--train_val_split",
                "0.75",
                "--full_seq",
                "--batch_size",
                "4",
                "--num_workers",
                "6",
                "--pin_memory",
                "--precision",
                "16",
                "--adam",
                "--stop_epoch",
                "50",
                // "--debug",
            ]
        },
        {
            "name": "Train Supervised EfficientNet-LSTM",
            "type": "python",
            "request": "launch",
            "module": "src.drivers.model_training",
            "justMyCode": true,
            "args": [
                // "--augment_training",
                // "--full_seq",
                "--from_imagenet",
                // "--freeze_weights",

                "--label_part", "plane",

                // "--include_unlabeled",
                // "--from_exp_name",
                    // "supervised__linear_lstm_plane__redo_1",
                    // "supervised__linear_lstm_side__from_imagenet__lp",

                "--exp_name",
                // Linear Models
                    // Only Supervised
                    // "supervised__linear_side__redo_1",
                    // "supervised__linear_side__with_aug__redo_1",
                    // "supervised__linear_plane__redo_1",
                    // "supervised__linear_plane__with_aug__redo_1",

                    // ImageNet - Finetuned
                    // "supervised__linear_side__from_imagenet",
                    "supervised__linear_plane__from_imagenet",
                    // "supervised__linear_side__from_imagenet__with_aug",
                    // "supervised__linear_plane__from_imagenet__with_aug",

                // LSTM + Linear Models
                    // "supervised__linear_lstm_plane__redo_1__linear_lstm__side__finetuned",
                    // "supervised__linear_lstm_plane__with_aug__redo_1",

                    // "supervised__linear_lstm_side__from_imagenet__lp",
                    // "supervised__linear_lstm_side__from_imagenet__lp__ft",
                    // "supervised__linear_lstm_plane__from_imagenet__with_aug__redo_1",

                // "--seed", "20230201",
                "--batch_size", "16",
                "--stop_epoch", "25",

                "--train",
                "--test",
                "--train_test_split", "0.75",
                "--train_val_split", "0.75",

                "--num_workers", "6",
                "--pin_memory",
                "--precision", "16",

                "--adam",
                "--lr", "0.001",
                "--weight_decay", "0.0005",
                "--momentum", "0.9",

                // "--debug",
            ]
        },
        {
            "name": "Train Ensemble ImageNet + MoCo",
            "type": "python",
            "request": "launch",
            "module": "src.drivers.model_training",
            "justMyCode": true,
            "args": [
                // "--augment_training",
                // "--full_seq",
                "--freeze_weights",

                "--label_part", "plane",

                "--from_exp_name",
                    // ImageNet + MoCo Vanilla
                    "imagenet",
                    "moco_sk_vanilla__no_aug",
                
                    // Finetuned Models
                    // "supervised__linear_lstm_plane__from_imagenet__with_aug",
                    // "moco_sk__same_label_side__no_aug__redo_2__linear_lstm__plane__finetuned__aug",


                "--exp_name",
                // ImageNet + MoCo
                    // "ensemble_imagenet__moco_sk__vanilla__no_aug__linear__plane",
                    // "ensemble_imagenet__moco_sk__vanilla__no_aug__linear__plane__higher_bs",
                    "ensemble_imagenet__moco_sk__vanilla__no_aug__linear__plane__dropout",
                    // "ensemble_imagenet__moco_sk__same_label_side__no_aug__redo_2__finetuned__linear__plane__aug",

                "--batch_size", "16",
                "--stop_epoch", "25",

                "--train",
                "--test",
                "--train_test_split", "0.75",
                "--train_val_split", "0.75",

                "--num_workers", "6",
                "--pin_memory",
                "--precision", "16",

                "--adam",
                "--lr", "0.001",
                "--weight_decay", "0.0005",
                "--momentum", "0.9",

                // "--debug",
            ]
        },
        {
            "name": "Extract Embeds",
            "type": "python",
            "request": "launch",
            "module": "src.drivers.embed",
            "justMyCode": true,
            "args": [
                "--exp_name",
                // "imagenet",
                // "cytoimagenet",

                // "moco_sk__same_label_side__no_aug__redo_2",
                // "moco_sk__same_label_plane__redo_3",
                // "moco_sk__same_label_plane__no_aug",
                "moco_sk_vanilla__no_aug",
                // "moco_sk_by_seq__no_aug",

                "--dset",
                "train",
                // "val",
                "test",
                "stanford",
                "uiowa",
                "chop",
                "stanford_non_seq",
                "sickkids_silent_trial",
            ]
        },
        {
            "name": "Plot UMAP",
            "type": "python",
            "request": "launch",
            "module": "src.data_viz.plot_umap",
            "justMyCode": true,
            "args": [
                "--exp_name",
                // "imagenet",
                // "moco_sk__same_label_side__no_aug__redo_2",
                // "moco_sk__same_label_side__redo_1",
                // "moco_sk__same_label_plane__redo_3",
                // "moco_sk__same_label_plane__no_aug",

                "moco_sk_vanilla__no_aug",
                "moco_sk_by_seq__no_aug",

                // "cytoimagenet",

                "--dset",
                "train",
                // "val",
                "test",
                "stanford",
                "uiowa",
                "chop",
                "stanford_non_seq",
                "sickkids_silent_trial",
            ]
        },
        {
            "name": "Prepare Segmented Data",
            "type": "python",
            "request": "launch",
            "module": "src.data_prep.segment_prep_script",
            "justMyCode": true
        },
        {
            "name": "Create GradCAMs",
            "type": "python",
            "request": "launch",
            "module": "src.data_viz.grad_cam",
            "justMyCode": true,
            "args": [
                "--exp_name",
                    // "supervised__linear_lstm_side__redo_1",
                    // "supervised__linear_lstm_side__with_aug__redo_1",

                    // "supervised__linear_lstm_side__from_imagenet__redo_3",
                    // "supervised__linear_lstm_side__from_imagenet__with_aug__redo_1",

                    // "moco_sk__same_label_side__redo_1__linear_lstm__side__finetuned",
                    // "moco_sk__same_label_side__redo_1__linear_lstm__side__finetuned__aug",

                    // "moco_sk__same_label_side__no_aug__redo_2__linear_lstm__side__finetuned",
                    // "moco_sk__same_label_side__no_aug__redo_2__linear_lstm__side__finetuned__aug",
                    "moco_sk_vanilla__no_aug__linear_lstm__plane__finetuned",
                "--dset",
                    "test",
                    "stanford",
                    "sickkids_silent_trial",
                    "stanford_non_seq",
                    "uiowa",
                    "chop",
                // "--label_whitelist",
                //     "Sagittal_Left"
            ]
        },
        {
            "name": "EDA",
            "type": "python",
            "request": "launch",
            "module": "src.data_viz.eda",
            "justMyCode": true
        },
        {
            "name": "Create Metadata",
            "type": "python",
            "request": "launch",
            "module": "src.drivers.create_metadata",
            "justMyCode": true
        },
    ]
}