[experiment]
exp_name = string(max=25)                                   # experiment name
tags = string_list()                                        # optional set of tags
seed = integer(default=-1)                                  # random seed
debug = boolean(default=0)                              # True, if debugging
train = boolean(default=0)                              # If True, train model
test = boolean(default=0)                               # If True, test model

[data]              # Data arguments
    [[general]]         # General shared arguments
    hospital = options("sickkids", "stanford", "uiowa", "chop", default="sickkids") # Hospitals
    full_seq = boolean(default=1)                        # True, if using full video sequence in training/inference
    label_part = options("side", "plane", None, default="plane")    # Specific label to use (e.g., plane/side)

    [[misc]]            # Miscellaneous arguments
    relative_side = boolean(default=0)                  # True, if relabeleling Left/Right to First/Second based on first seen

    [[training]]        # Training-related arguments
    augment_training = boolean(default=0)               # True, if adding augmentations during training
    include_unlabeled = boolean(default=0)              # True, if adding unlabeled images during training
    train_test_split = float(min=0, max=1, default=0.75)      # Prop. of total data to leave for training & validation, rest for testing
    train_val_split = float(min=0, max=1, default=0.75)       # Prop. of data after removing test for training, rest for validation
    cross_val_folds = integer(min=1, default=1)             # If >1, perform K-Fold cross-validation

    [[dataloader]]      # Dataloader-related arguments
    batch_size = integer(min=1, default=32)                 # Batch size
    shuffle = boolean(default=0)                        # True, if shuffling data
    num_workers = integer(min=1, default=4)                 # Number of CPU workers
    pin_memory = boolean(default=1)                      # True, if pins tensors to GPU

[model]
    [[training]]          # General model training arguments
    swa = boolean(default=1)                             # True, if performing Stochastic Weight Averaging
    checkpoint = boolean(default=1)                      # True, if performing checkpointing
    precision = option("16-mixed", "bf16-mixed", "32", default="bf16-mixed")    # Model precision
    stop_epoch = integer(min=1, default=30)                 # Number of epochs

    [[pretrained]]        # Pre-trained model arguments
    freeze_weights = boolean(default=0)                 # True, if weights stay frozen
    from_imagenet = boolean(default=0)                  # True, if loading ImageNet weights

    [[optim]]             # Optimization parameters
    optimizer = option("sgd", "adamw", default="adamw")     # Optimizer of choice
    lr = float(min=0.000001, default=0.001)                 # Learning rate
    weight_decay = float(min=0, default=0.0005)             # Weight decay
    momentum = float(min=0, default=0.9)                    # SGD momentum
    grad_clip_norm = float(min=0, default=5.0)              # Gradient clipping norm

    [[lstm]]            # LSTM-specific arguments
    n_lstm_layers = integer(min=1, default=1)               # Number of LSTM layers
    hidden_dim = integer(default=512)                       # Hidden dimension size
    bidirectional = boolean(default=0)                      # True, if bidirectional LSTM

    [[misc]]            # Miscellaneous arguments
    multi_output = boolean(default=0)                       # True, if using multi-output supervised model

[ssl]               # Self-supervised pre-training specific arguments
self_supervised = boolean(default=0)                        # True, if self-supervised

    [[ssl_experiment]]
    ssl_model = string(default="moco")                      # name of model
    ssl_ckpt_path = string(default=None)                    # path to model checkpoint
    from_exp_name = string_list(default=,)                  # Experiment/s to start SSL pre-training from
    temperature = float(min=0, default=0.1)                 # Temperature for loss scaling

    [[ssl_eval]]        # Training SSL eval models
    ssl_eval_linear = boolean(default=0)                    # True, if linear probing on SSL model
    ssl_eval_linear_lstm = boolean(default=0)               # True, if lstm+linear probing on SSL model
    from_ssl_eval = boolean(default=0)                      # True, if weights come from SSL + linear probed model

    [[ssl_data]]
    same_label = boolean(default=0)                         # True, if positive samples are made to be same label images

    [[moco_args]]       # MoCo-specific arguments
    memory_bank_size = integer(min=0, default=4096)         # Size of MoCo memory bank
    exclude_momentum_encoder = boolean(default=0)           # True, if excluding momentum encoder
    custom_collate = string(default=None)                   # Custom collate function
    custom_ssl_loss = string(default=None)                  # Custom SSL loss
